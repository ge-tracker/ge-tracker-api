'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var moment = _interopDefault(require('moment'));
var Axios = _interopDefault(require('axios'));
var merge = _interopDefault(require('deepmerge'));

function handleResponseBody(body) {
    if (!('data' in body)) {
        return body;
    }

    return body.data;
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var APIBaseWrapper = function () {
    function APIBaseWrapper(client) {
        classCallCheck(this, APIBaseWrapper);

        this.client = client;
    }

    createClass(APIBaseWrapper, [{
        key: '_wrapGet',
        value: function _wrapGet(path) {
            return this.client.get(path).then(function (_ref) {
                var data = _ref.data;
                return data;
            }).then(handleResponseBody);
        }
    }, {
        key: '_wrapPost',
        value: function _wrapPost(path) {
            var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            return this.client.post(path, params).then(function (_ref2) {
                var data = _ref2.data;
                return data;
            });
        }
    }, {
        key: '_wrapDelete',
        value: function _wrapDelete(path) {
            return this.client.delete(path).then(function (_ref3) {
                var data = _ref3.data;
                return data;
            });
        }

        /**
         * Convert options to query string parameters for an endpoint
         * @param url
         * @param opts
         * @return {*}
         */

    }, {
        key: 'parseOptions',
        value: function parseOptions(url, opts) {
            if (APIBaseWrapper.isEmptyObject(opts)) {
                return url;
            }

            var params = APIBaseWrapper.toQueryString(opts);
            var sep = url.indexOf('?') === -1 ? '?' : '&';

            return '' + url + sep + params;
        }

        /**
         * Convert an object to query string format
         *
         * @param obj
         * @return {string|*}
         */

    }], [{
        key: 'toQueryString',
        value: function toQueryString(obj) {
            var parts = [];
            for (var i in obj) {
                if (obj.hasOwnProperty(i)) {
                    parts.push(encodeURIComponent(i) + "=" + encodeURIComponent(obj[i]));
                }
            }
            return parts.join("&");
        }
    }, {
        key: 'isEmptyObject',


        /**
         * Returns `true` if an object is empty
         *
         * @param obj
         * @return {boolean}
         */
        value: function isEmptyObject(obj) {
            return Object.keys(obj).length === 0 && obj.constructor === Object;
        }
    }]);
    return APIBaseWrapper;
}();

var APIUptimeWrapper = function (_APIBaseWrapper) {
    inherits(APIUptimeWrapper, _APIBaseWrapper);

    function APIUptimeWrapper() {
        classCallCheck(this, APIUptimeWrapper);
        return possibleConstructorReturn(this, (APIUptimeWrapper.__proto__ || Object.getPrototypeOf(APIUptimeWrapper)).apply(this, arguments));
    }

    createClass(APIUptimeWrapper, [{
        key: 'getStatus',
        value: function getStatus() {
            return this.client.get('osb-uptime/status').then(function (_ref) {
                var data = _ref.data;
                return data.data;
            });
        }
    }]);
    return APIUptimeWrapper;
}(APIBaseWrapper);

var AuthWrapper = function (_APIBaseWrapper) {
    inherits(AuthWrapper, _APIBaseWrapper);

    function AuthWrapper() {
        classCallCheck(this, AuthWrapper);
        return possibleConstructorReturn(this, (AuthWrapper.__proto__ || Object.getPrototypeOf(AuthWrapper)).apply(this, arguments));
    }

    createClass(AuthWrapper, [{
        key: 'login',
        value: function login(email, password) {
            return this._wrapPost('auth/login', {
                email: email,
                password: password
            });
        }
    }, {
        key: 'login2fa',
        value: function login2fa(email, password, code) {
            return this._wrapPost('auth/2fa', {
                email: email,
                password: password,
                code: code
            });
        }
    }, {
        key: 'logout',
        value: function logout() {
            return this._wrapPost('auth/logout');
        }
    }]);
    return AuthWrapper;
}(APIBaseWrapper);

var BarrowsRepairWrapper = function (_APIBaseWrapper) {
    inherits(BarrowsRepairWrapper, _APIBaseWrapper);

    function BarrowsRepairWrapper() {
        classCallCheck(this, BarrowsRepairWrapper);
        return possibleConstructorReturn(this, (BarrowsRepairWrapper.__proto__ || Object.getPrototypeOf(BarrowsRepairWrapper)).apply(this, arguments));
    }

    createClass(BarrowsRepairWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('barrows-repair');
        }
    }]);
    return BarrowsRepairWrapper;
}(APIBaseWrapper);

var DashboardWrapper = function (_APIBaseWrapper) {
    inherits(DashboardWrapper, _APIBaseWrapper);

    function DashboardWrapper() {
        classCallCheck(this, DashboardWrapper);
        return possibleConstructorReturn(this, (DashboardWrapper.__proto__ || Object.getPrototypeOf(DashboardWrapper)).apply(this, arguments));
    }

    createClass(DashboardWrapper, [{
        key: 'getDashboard',
        value: function getDashboard() {
            return this._wrapGet('/dashboard');
        }
    }]);
    return DashboardWrapper;
}(APIBaseWrapper);

var DecantPotionsWrapper = function (_APIBaseWrapper) {
    inherits(DecantPotionsWrapper, _APIBaseWrapper);

    function DecantPotionsWrapper() {
        classCallCheck(this, DecantPotionsWrapper);
        return possibleConstructorReturn(this, (DecantPotionsWrapper.__proto__ || Object.getPrototypeOf(DecantPotionsWrapper)).apply(this, arguments));
    }

    createClass(DecantPotionsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('decant-potions');
        }
    }]);
    return DecantPotionsWrapper;
}(APIBaseWrapper);

var DeviceWrapper = function (_APIBaseWrapper) {
    inherits(DeviceWrapper, _APIBaseWrapper);

    function DeviceWrapper() {
        classCallCheck(this, DeviceWrapper);
        return possibleConstructorReturn(this, (DeviceWrapper.__proto__ || Object.getPrototypeOf(DeviceWrapper)).apply(this, arguments));
    }

    createClass(DeviceWrapper, [{
        key: 'register',

        /**
         * Register Device to a User
         *
         * Required fields:
         *      - platform
         *      - platformVersion
         *      - width
         *      - height
         *      - uniqueId
         *      - appVersion
         *
         * Optional fields:
         *
         *      - pushInfo.pushToken
         *      - pushInfo.userId
         *
         * @param platform
         * @param platformVersion
         * @param width
         * @param height
         * @param uniqueId
         * @param appVersion
         * @param pushInfo
         * @return {*}
         */
        value: function register(_ref) {
            var platform = _ref.platform,
                platformVersion = _ref.platformVersion,
                width = _ref.width,
                height = _ref.height,
                uniqueId = _ref.uniqueId,
                appVersion = _ref.appVersion,
                pushInfo = _ref.pushInfo;

            return this._wrapPost('devices/register', {
                platform: platform,
                platformVersion: platformVersion,
                width: width,
                height: height,
                uniqueId: uniqueId,
                appVersion: appVersion,
                pushInfo: pushInfo
            });
        }
    }]);
    return DeviceWrapper;
}(APIBaseWrapper);

var FavouriteItemsWrapper = function (_APIBaseWrapper) {
    inherits(FavouriteItemsWrapper, _APIBaseWrapper);

    function FavouriteItemsWrapper() {
        classCallCheck(this, FavouriteItemsWrapper);
        return possibleConstructorReturn(this, (FavouriteItemsWrapper.__proto__ || Object.getPrototypeOf(FavouriteItemsWrapper)).apply(this, arguments));
    }

    createClass(FavouriteItemsWrapper, [{
        key: 'addItem',
        value: function addItem(itemId) {
            return this._wrapPost('favourite-items', {
                item_id: itemId
            });
        }
    }, {
        key: 'deleteItem',
        value: function deleteItem(favouriteItemsId) {
            return this._wrapDelete('favourite-items/' + favouriteItemsId);
        }
    }, {
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('favourite-items');
        }
    }]);
    return FavouriteItemsWrapper;
}(APIBaseWrapper);

var GELimitsWrapper = function (_APIBaseWrapper) {
    inherits(GELimitsWrapper, _APIBaseWrapper);

    function GELimitsWrapper() {
        classCallCheck(this, GELimitsWrapper);
        return possibleConstructorReturn(this, (GELimitsWrapper.__proto__ || Object.getPrototypeOf(GELimitsWrapper)).apply(this, arguments));
    }

    createClass(GELimitsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('ge-limits');
        }
    }]);
    return GELimitsWrapper;
}(APIBaseWrapper);

var GraphWrapper = function (_APIBaseWrapper) {
    inherits(GraphWrapper, _APIBaseWrapper);

    function GraphWrapper() {
        classCallCheck(this, GraphWrapper);
        return possibleConstructorReturn(this, (GraphWrapper.__proto__ || Object.getPrototypeOf(GraphWrapper)).apply(this, arguments));
    }

    createClass(GraphWrapper, [{
        key: 'getDuration',
        value: function getDuration(duration, itemId) {
            return this._wrapGet(itemId + '/' + duration);
        }
    }, {
        key: 'getDay',
        value: function getDay(itemId) {
            var tenMinute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            if (tenMinute) {
                var dateFormat = 'Y-MM-DD';
                var date = moment().format(dateFormat);

                var startDate = params.hasOwnProperty('start') ? moment(params.start).format(dateFormat) : date;
                var endDate = params.hasOwnProperty('end') ? moment(params.end).format(dateFormat) : date;

                return this._wrapGet(itemId + '/day?day=10&duration[start]=' + startDate + '&duration[end]=' + endDate);
            } else {
                return this.getDuration('day', itemId);
            }
        }
    }, {
        key: 'getWeek',
        value: function getWeek(itemId) {
            return this.getDuration('week', itemId);
        }
    }, {
        key: 'getMonth',
        value: function getMonth(itemId) {
            return this.getDuration('month', itemId);
        }
    }, {
        key: 'getQuarter',
        value: function getQuarter(itemId) {
            return this.getDuration('quarter', itemId);
        }
    }, {
        key: 'getYear',
        value: function getYear(itemId) {
            return this.getDuration('year', itemId);
        }
    }]);
    return GraphWrapper;
}(APIBaseWrapper);

var HerbloreWrapper = function (_APIBaseWrapper) {
    inherits(HerbloreWrapper, _APIBaseWrapper);

    function HerbloreWrapper() {
        classCallCheck(this, HerbloreWrapper);
        return possibleConstructorReturn(this, (HerbloreWrapper.__proto__ || Object.getPrototypeOf(HerbloreWrapper)).apply(this, arguments));
    }

    createClass(HerbloreWrapper, [{
        key: 'getCleanHerbs',
        value: function getCleanHerbs() {
            return this._wrapGet('herblore/clean-herbs');
        }
    }, {
        key: 'getMakePotions',
        value: function getMakePotions() {
            return this._wrapGet('herblore/make-potions');
        }
    }, {
        key: 'getUnfinishedPotions',
        value: function getUnfinishedPotions() {
            return this._wrapGet('herblore/unfinished-potions');
        }
    }]);
    return HerbloreWrapper;
}(APIBaseWrapper);

var HighAlchemyWrapper = function (_APIBaseWrapper) {
    inherits(HighAlchemyWrapper, _APIBaseWrapper);

    function HighAlchemyWrapper() {
        classCallCheck(this, HighAlchemyWrapper);
        return possibleConstructorReturn(this, (HighAlchemyWrapper.__proto__ || Object.getPrototypeOf(HighAlchemyWrapper)).apply(this, arguments));
    }

    createClass(HighAlchemyWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('high-alchemy');
        }
    }]);
    return HighAlchemyWrapper;
}(APIBaseWrapper);

var HighVolumeWrapper = function (_APIBaseWrapper) {
    inherits(HighVolumeWrapper, _APIBaseWrapper);

    function HighVolumeWrapper() {
        classCallCheck(this, HighVolumeWrapper);
        return possibleConstructorReturn(this, (HighVolumeWrapper.__proto__ || Object.getPrototypeOf(HighVolumeWrapper)).apply(this, arguments));
    }

    createClass(HighVolumeWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('high-volume');
        }
    }]);
    return HighVolumeWrapper;
}(APIBaseWrapper);

var HighestMarginsWrapper = function (_APIBaseWrapper) {
    inherits(HighestMarginsWrapper, _APIBaseWrapper);

    function HighestMarginsWrapper() {
        classCallCheck(this, HighestMarginsWrapper);
        return possibleConstructorReturn(this, (HighestMarginsWrapper.__proto__ || Object.getPrototypeOf(HighestMarginsWrapper)).apply(this, arguments));
    }

    createClass(HighestMarginsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('highest-margins');
        }
    }]);
    return HighestMarginsWrapper;
}(APIBaseWrapper);

var ItemSetsWrapper = function (_APIBaseWrapper) {
    inherits(ItemSetsWrapper, _APIBaseWrapper);

    function ItemSetsWrapper() {
        classCallCheck(this, ItemSetsWrapper);
        return possibleConstructorReturn(this, (ItemSetsWrapper.__proto__ || Object.getPrototypeOf(ItemSetsWrapper)).apply(this, arguments));
    }

    createClass(ItemSetsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('item-sets');
        }
    }]);
    return ItemSetsWrapper;
}(APIBaseWrapper);

var ItemsWrapper = function (_APIBaseWrapper) {
    inherits(ItemsWrapper, _APIBaseWrapper);

    function ItemsWrapper() {
        classCallCheck(this, ItemsWrapper);
        return possibleConstructorReturn(this, (ItemsWrapper.__proto__ || Object.getPrototypeOf(ItemsWrapper)).apply(this, arguments));
    }

    createClass(ItemsWrapper, [{
        key: 'getAllItems',
        value: function getAllItems() {
            return this._wrapGet('items');
        }
    }, {
        key: 'getItem',
        value: function getItem(itemId) {
            return this._wrapGet('items/' + itemId);
        }
    }, {
        key: 'getItems',
        value: function getItems() {
            for (var _len = arguments.length, itemIds = Array(_len), _key = 0; _key < _len; _key++) {
                itemIds[_key] = arguments[_key];
            }

            return this._wrapGet('items/multi/' + itemIds.join(','));
        }
    }, {
        key: 'search',
        value: function search(query) {
            return this._wrapGet('items/search/' + query);
        }
    }]);
    return ItemsWrapper;
}(APIBaseWrapper);

var LeaderboardWrapper = function (_APIBaseWrapper) {
    inherits(LeaderboardWrapper, _APIBaseWrapper);

    function LeaderboardWrapper() {
        classCallCheck(this, LeaderboardWrapper);
        return possibleConstructorReturn(this, (LeaderboardWrapper.__proto__ || Object.getPrototypeOf(LeaderboardWrapper)).apply(this, arguments));
    }

    createClass(LeaderboardWrapper, [{
        key: 'getLeaderboard',
        value: function getLeaderboard(slug) {
            return this._wrapGet('leaderboard/' + slug);
        }
    }, {
        key: 'getSummary',
        value: function getSummary() {
            return this._wrapGet('leaderboard');
        }
    }]);
    return LeaderboardWrapper;
}(APIBaseWrapper);

var MagicTabletsWrapper = function (_APIBaseWrapper) {
    inherits(MagicTabletsWrapper, _APIBaseWrapper);

    function MagicTabletsWrapper() {
        classCallCheck(this, MagicTabletsWrapper);
        return possibleConstructorReturn(this, (MagicTabletsWrapper.__proto__ || Object.getPrototypeOf(MagicTabletsWrapper)).apply(this, arguments));
    }

    createClass(MagicTabletsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('magic-tablets');
        }
    }]);
    return MagicTabletsWrapper;
}(APIBaseWrapper);

var MarketWatchWrapper = function (_APIBaseWrapper) {
    inherits(MarketWatchWrapper, _APIBaseWrapper);

    function MarketWatchWrapper() {
        classCallCheck(this, MarketWatchWrapper);
        return possibleConstructorReturn(this, (MarketWatchWrapper.__proto__ || Object.getPrototypeOf(MarketWatchWrapper)).apply(this, arguments));
    }

    createClass(MarketWatchWrapper, [{
        key: 'getIndex',
        value: function getIndex(indexId) {
            return this._wrapGet('market-watch/' + indexId);
        }
    }, {
        key: 'getSummary',
        value: function getSummary() {
            return this._wrapGet('market-watch');
        }
    }]);
    return MarketWatchWrapper;
}(APIBaseWrapper);

var NewItemsWrapper = function (_APIBaseWrapper) {
    inherits(NewItemsWrapper, _APIBaseWrapper);

    function NewItemsWrapper() {
        classCallCheck(this, NewItemsWrapper);
        return possibleConstructorReturn(this, (NewItemsWrapper.__proto__ || Object.getPrototypeOf(NewItemsWrapper)).apply(this, arguments));
    }

    createClass(NewItemsWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('new-items');
        }
    }]);
    return NewItemsWrapper;
}(APIBaseWrapper);

var NotificationsWrapper = function (_APIBaseWrapper) {
    inherits(NotificationsWrapper, _APIBaseWrapper);

    function NotificationsWrapper() {
        classCallCheck(this, NotificationsWrapper);
        return possibleConstructorReturn(this, (NotificationsWrapper.__proto__ || Object.getPrototypeOf(NotificationsWrapper)).apply(this, arguments));
    }

    createClass(NotificationsWrapper, [{
        key: 'getNotifications',
        value: function getNotifications() {
            return this._wrapGet('notifications');
        }
    }, {
        key: 'getNotification',
        value: function getNotification(notificationId) {
            return this._wrapGet('notifications/' + notificationId);
        }
    }, {
        key: 'markAllAsRead',
        value: function markAllAsRead() {
            return this._wrapPost('notifications/mark-read');
        }
    }]);
    return NotificationsWrapper;
}(APIBaseWrapper);

var ProfitTrackerWrapper = function (_APIBaseWrapper) {
    inherits(ProfitTrackerWrapper, _APIBaseWrapper);

    function ProfitTrackerWrapper() {
        classCallCheck(this, ProfitTrackerWrapper);
        return possibleConstructorReturn(this, (ProfitTrackerWrapper.__proto__ || Object.getPrototypeOf(ProfitTrackerWrapper)).apply(this, arguments));
    }

    createClass(ProfitTrackerWrapper, [{
        key: 'getTransactions',
        value: function getTransactions() {
            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            return this.client.get(this.parseOptions('/profit-tracker', opts)).then(function (_ref) {
                var data = _ref.data;
                return data;
            });
        }
    }, {
        key: 'getTransaction',
        value: function getTransaction(id) {
            return this._wrapGet('/profit-tracker/' + id);
        }
    }, {
        key: 'createTransaction',
        value: function createTransaction(itemId, qty, buyPrice) {
            var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

            return this._wrapPost('/profit-tracker', _extends({
                item_id: itemId,
                qty: qty,
                buy_price: buyPrice
            }, params));
        }
    }, {
        key: 'updateTransaction',
        value: function updateTransaction(id, status) {
            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            return this._wrapPost('/profit-tracker/' + id, _extends({
                status: status
            }, params));
        }
    }, {
        key: 'deleteTransaction',
        value: function deleteTransaction(id) {
            return this._wrapDelete('/profit-tracker/' + id);
        }
    }, {
        key: 'getBuyingTransactions',
        value: function getBuyingTransactions() {
            return this._wrapGet('/profit-tracker/buying');
        }
    }, {
        key: 'getBoughtTransactions',
        value: function getBoughtTransactions() {
            return this._wrapGet('/profit-tracker/bought');
        }
    }, {
        key: 'getSellingTransactions',
        value: function getSellingTransactions() {
            return this._wrapGet('/profit-tracker/selling');
        }
    }, {
        key: 'getSoldTransactions',
        value: function getSoldTransactions() {
            return this._wrapGet('/profit-tracker/sold');
        }
    }, {
        key: 'getActiveTransactions',
        value: function getActiveTransactions() {
            return this._wrapGet('/profit-tracker/active-transactions');
        }
    }, {
        key: 'getPreviousTransactions',
        value: function getPreviousTransactions(itemId) {
            return this._wrapGet('/profit-tracker/previous-transactions/' + itemId);
        }
    }, {
        key: 'getSummary',
        value: function getSummary() {
            return this._wrapGet('/profit-tracker/summary');
        }
    }]);
    return ProfitTrackerWrapper;
}(APIBaseWrapper);

var PlankMakingWrapper = function (_APIBaseWrapper) {
    inherits(PlankMakingWrapper, _APIBaseWrapper);

    function PlankMakingWrapper() {
        classCallCheck(this, PlankMakingWrapper);
        return possibleConstructorReturn(this, (PlankMakingWrapper.__proto__ || Object.getPrototypeOf(PlankMakingWrapper)).apply(this, arguments));
    }

    createClass(PlankMakingWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('plank-making');
        }
    }]);
    return PlankMakingWrapper;
}(APIBaseWrapper);

var RSUpdatesWrapper = function (_APIBaseWrapper) {
    inherits(RSUpdatesWrapper, _APIBaseWrapper);

    function RSUpdatesWrapper() {
        classCallCheck(this, RSUpdatesWrapper);
        return possibleConstructorReturn(this, (RSUpdatesWrapper.__proto__ || Object.getPrototypeOf(RSUpdatesWrapper)).apply(this, arguments));
    }

    createClass(RSUpdatesWrapper, [{
        key: 'get',
        value: function get$$1() {
            return this._wrapGet('rs-updates');
        }
    }]);
    return RSUpdatesWrapper;
}(APIBaseWrapper);

var StatsWrapper = function (_APIBaseWrapper) {
    inherits(StatsWrapper, _APIBaseWrapper);

    function StatsWrapper() {
        classCallCheck(this, StatsWrapper);
        return possibleConstructorReturn(this, (StatsWrapper.__proto__ || Object.getPrototypeOf(StatsWrapper)).apply(this, arguments));
    }

    createClass(StatsWrapper, [{
        key: 'getGlobalStats',
        value: function getGlobalStats() {
            return this.client.get('stats').then(function (_ref) {
                var data = _ref.data;
                return data;
            });
        }
    }]);
    return StatsWrapper;
}(APIBaseWrapper);

var StoreProfitWrapper = function (_APIBaseWrapper) {
    inherits(StoreProfitWrapper, _APIBaseWrapper);

    function StoreProfitWrapper() {
        classCallCheck(this, StoreProfitWrapper);
        return possibleConstructorReturn(this, (StoreProfitWrapper.__proto__ || Object.getPrototypeOf(StoreProfitWrapper)).apply(this, arguments));
    }

    createClass(StoreProfitWrapper, [{
        key: 'getStores',
        value: function getStores() {
            return this._wrapGet('stores');
        }
    }, {
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('stores/profit');
        }
    }]);
    return StoreProfitWrapper;
}(APIBaseWrapper);

var SubscriptionsWrapper = function (_APIBaseWrapper) {
    inherits(SubscriptionsWrapper, _APIBaseWrapper);

    function SubscriptionsWrapper() {
        classCallCheck(this, SubscriptionsWrapper);
        return possibleConstructorReturn(this, (SubscriptionsWrapper.__proto__ || Object.getPrototypeOf(SubscriptionsWrapper)).apply(this, arguments));
    }

    createClass(SubscriptionsWrapper, [{
        key: "getSubscription",
        value: function getSubscription(subscriptionId) {
            return this._wrapGet("/subscriptions/" + subscriptionId);
        }
    }, {
        key: "getUserSubscriptions",
        value: function getUserSubscriptions(userId) {
            return this._wrapGet("/subscriptions/user/" + userId);
        }
    }, {
        key: "terminateSubscription",
        value: function terminateSubscription(subscriptionId) {
            return this._wrapDelete("/subscriptions/" + subscriptionId);
        }
    }]);
    return SubscriptionsWrapper;
}(APIBaseWrapper);

var SuggestedItemsWrapper = function (_APIBaseWrapper) {
    inherits(SuggestedItemsWrapper, _APIBaseWrapper);

    function SuggestedItemsWrapper() {
        classCallCheck(this, SuggestedItemsWrapper);
        return possibleConstructorReturn(this, (SuggestedItemsWrapper.__proto__ || Object.getPrototypeOf(SuggestedItemsWrapper)).apply(this, arguments));
    }

    createClass(SuggestedItemsWrapper, [{
        key: 'refresh',
        value: function refresh() {
            return this._wrapGet('suggested-items/refresh');
        }
    }, {
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('suggested-items');
        }
    }]);
    return SuggestedItemsWrapper;
}(APIBaseWrapper);

var TanLeatherWrapper = function (_APIBaseWrapper) {
    inherits(TanLeatherWrapper, _APIBaseWrapper);

    function TanLeatherWrapper() {
        classCallCheck(this, TanLeatherWrapper);
        return possibleConstructorReturn(this, (TanLeatherWrapper.__proto__ || Object.getPrototypeOf(TanLeatherWrapper)).apply(this, arguments));
    }

    createClass(TanLeatherWrapper, [{
        key: 'getItems',
        value: function getItems() {
            return this._wrapGet('tan-leather');
        }
    }]);
    return TanLeatherWrapper;
}(APIBaseWrapper);

var UserWrapper = function (_APIBaseWrapper) {
    inherits(UserWrapper, _APIBaseWrapper);

    function UserWrapper() {
        classCallCheck(this, UserWrapper);
        return possibleConstructorReturn(this, (UserWrapper.__proto__ || Object.getPrototypeOf(UserWrapper)).apply(this, arguments));
    }

    createClass(UserWrapper, [{
        key: 'getById',
        value: function getById(userId) {
            return this.client.get('users/' + userId).then(function (_ref) {
                var data = _ref.data;
                return data.data;
            });
        }
    }, {
        key: 'search',
        value: function search(query) {
            return this.client.get('users/search/' + query).then(function (_ref2) {
                var data = _ref2.data;
                return data.data;
            });
        }
    }, {
        key: 'getAuthenticateUser',
        value: function getAuthenticateUser() {
            return this.client.get('users/me').then(function (_ref3) {
                var data = _ref3.data;
                return data.data;
            });
        }
    }]);
    return UserWrapper;
}(APIBaseWrapper);

var InvalidApiKey = function (_Error) {
    inherits(InvalidApiKey, _Error);

    function InvalidApiKey() {
        classCallCheck(this, InvalidApiKey);

        var _this = possibleConstructorReturn(this, (InvalidApiKey.__proto__ || Object.getPrototypeOf(InvalidApiKey)).call(this, 'Specified API key was missing or invalid'));

        Error.captureStackTrace(_this, InvalidApiKey);
        return _this;
    }

    return InvalidApiKey;
}(Error);

var GE_TRACKER_API_URL = 'https://www.ge-tracker.com/api';

var DefaultOptions = {
    // set the base URL for all API calls made on this Axios instance
    baseURL: GE_TRACKER_API_URL,

    // set a sane default for the request TTL
    timeout: 30e3,

    // disable redirects -- API should NOT return a redirect response
    maxRedirects: 0,

    // explicitly set the default response type to JSON
    responseType: 'json',

    // specify a custom user-agent header to identify the client used
    // and for a point of contact
    headers: {
        'User-Agent': 'ge-tracker-api client <https://github.com/kylestev/ge-tracker-api>'
    }
};

function isUnauthorizedResponse(error) {
    return error.response && error.response.status === 401;
}

function createAuthHeader(apiKey) {
    return {
        // Authorization header is required with a valid API key for all API calls
        Authorization: 'Bearer ' + apiKey
    };
}

function createClient(apiKey) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    var options = merge(DefaultOptions, opts || {});
    var instance = Axios.create(merge(options, { headers: createAuthHeader(apiKey) }));

    // add custom response interceptors
    instance.interceptors.response.use(function (response) {
        return response;
    }, function (error) {
        // intercept 401 Unauthorized responses and reject the promise chain with
        // an appropriate typed error
        if (isUnauthorizedResponse(error)) {
            return Promise.reject(new InvalidApiKey());
        }
        return Promise.reject(error);
    });

    return instance;
}

var createApi = function createApi(client) {
    return {
        APIUptime: new APIUptimeWrapper(client),
        Auth: new AuthWrapper(client),
        BarrowsRepair: new BarrowsRepairWrapper(client),
        Dashboard: new DashboardWrapper(client),
        DecantPotions: new DecantPotionsWrapper(client),
        Device: new DeviceWrapper(client),
        FavouriteItems: new FavouriteItemsWrapper(client),
        GELimits: new GELimitsWrapper(client),
        Graphs: new GraphWrapper(client),
        Herblore: new HerbloreWrapper(client),
        HighAlchemy: new HighAlchemyWrapper(client),
        HighVolume: new HighVolumeWrapper(client),
        HighestMargins: new HighestMarginsWrapper(client),
        ItemSets: new ItemSetsWrapper(client),
        Items: new ItemsWrapper(client),
        Leaderboard: new LeaderboardWrapper(client),
        MagicTablets: new MagicTabletsWrapper(client),
        MarketWatch: new MarketWatchWrapper(client),
        NewItems: new NewItemsWrapper(client),
        Notifications: new NotificationsWrapper(client),
        ProfitTracker: new ProfitTrackerWrapper(client),
        PlankMaking: new PlankMakingWrapper(client),
        RSUpdates: new RSUpdatesWrapper(client),
        Stats: new StatsWrapper(client),
        StoreProfit: new StoreProfitWrapper(client),
        Subscriptions: new SubscriptionsWrapper(client),
        SuggestedItems: new SuggestedItemsWrapper(client),
        TanLeather: new TanLeatherWrapper(client),
        Users: new UserWrapper(client),

        /**
         * Get GT App Manifest JSON
         *
         * @return {PromiseLike<T>}
         */
        getManifest: function getManifest() {

            var apiUrl = client.defaults.baseURL.replace('/api', '');
            return client.get(apiUrl + "app_manifest.json").then(function (_ref) {
                var data = _ref.data;
                return data.data;
            });
        }
    };
};

function getApiKeyFromEnv() {
    return process.env.GE_TRACKER_API_KEY;
}

function createInstance(apiKey) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    return createApi(createClient(apiKey, opts));
}

var createClient$1 = function createClient$$1(apiKey) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    return createInstance(apiKey, opts);
};
var createClientFromEnv = function createClientFromEnv() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    return createInstance(getApiKeyFromEnv(), opts);
};

exports.createClient = createClient$1;
exports.createClientFromEnv = createClientFromEnv;
